version: '3.3'

services:
  db:
    image: mysql:5.7
    container_name: django_db
    restart: always
    environment:
      MYSQL_DATABASE: django_db
      MYSQL_USER: taishi
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    expose:
      - 3306

  gunicorn:
    container_name: django_app
    build: ./learning_app
    #command: python manage.py runserver 0.0.0.0:8000
    command: echo U0VDUkVUX0tFWT03dnU4XmI9dGk3My0kOXBhLWcqNW5mZnZ5ZXchaThrPXEzaHpobStteT1AOCkmZTcjcApERUJVRz1GYWxzZQpBTExPV0VEX0hPU1RTPWxvY2FsaG9zdCwxMjcuMC4wLjEsZ3VuaWNvcm4tZGphbmdvCkRBVEFCQVNFX1VSTD1teXNxbDovL3RhaXNoaTpwYXNzd29yZEBkYjozMzA2L2RqYW5nb19kYg== | base64 -di > .env.dev
    #command: echo $ENV_FILE | base64 -di > .env.dev
    volumes:
      - ./learning_app/:/usr/src/app/
      - gunicorn:/var/run/gunicorn
    ports:
      - 8000:8000
    #env_file:
    #  - ./learning_app/.env.dev

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./docker_nginx/Dockerfile
    #command: echo $ENV_FILE | base64 -di > .env.dev
    ports:
      - 80:80
    volumes:
      #- ./learning_app/:/usr/src/app/
      - ./nginx:/etc/nginx
      - gunicorn:/var/run/gunicorn



volumes:
  gunicorn:
    driver: local

